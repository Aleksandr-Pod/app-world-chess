{"version":3,"file":"static/js/286.2ddfebd4.chunk.js","mappings":"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","sources":["components/backgroundPage/BackgroundPage.styled.tsx","components/backgroundPage/BackgroundPage.tsx","components/generalButton/GeneralButton.styled.tsx","components/loginForm/LoginForm.styled.tsx","components/titleApp/TitleApp.styled.tsx","components/titleApp/TitleApp.tsx","helpers/validationForm.ts","components/loginForm/LoginForm.tsx","views/loginPage/LoginPage.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport chess from \"../../images/chess.jpg\";\n\nexport const BackgroundBox = styled.div`\n    background-color: #4a4f5a;\n    justify-content: center;\n    align-items: center;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    background-image: linear-gradient(rgba(0, 0, 0, 0.31), rgba(0, 0, 0, 0.31)), url(${chess});\n`;\n\nexport const BlurMainPage = styled.div`\n    width: 100%;\n    height: 100%;\n    background: rgba(255, 255, 255, 0.01);\n    backdrop-filter: blur(5px);\n    z-index: 1;\n    position: fixed;\n    top: 0;\n    right: 0;\n    width: 100vw;\n    height: 100vh;\n`;\n","import { BackgroundBox, BlurMainPage } from \"./BackgroundPage.styled\";\n\nconst BackgroundPage = ({ children }: any) => {\n    return (\n        <BackgroundBox>\n            <BlurMainPage />\n            {children}\n        </BackgroundBox>\n    );\n};\n\nexport default BackgroundPage;\n","import styled from \"@emotion/styled\";\nimport { Button } from \"@mui/material\";\n\nexport const GeneralButton = styled(Button)(\n    ({ theme, bts }: any) => `\n    border-radius: 20px;\n    width: 100%;\n    font-weight: 400;\n    font-size: 18px;\n    line-height: 27px;\n    height: 50px;\n    margin-bottom: 20px;\n    color: ${bts === \"link\" ? theme.colors.accent : theme.colors.white};\n    border-color:${bts === \"link\" ? theme.colors.accent : theme.colors.green};\n    background-color: ${bts === \"link\" ? theme.colors.white : theme.colors.green};\n     :hover {\n        background-color: ${bts === \"link\" ? theme.colors.hoverWhite : theme.colors.hoverGreen};\n    }\n`\n);\n","import styled from \"@emotion/styled\";\n\nexport const ModalForma = styled.div`\n    position: absolute;\n    z-index: 25;\n    top: 0;\n    left: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    width: 100vw;\n    height: 100vh;\n    padding: 20px;\n    background-color: ${({ theme }: any) => theme.colors.white};\n    @media (min-width: 768px) {\n        position: relative;\n        margin-left: auto;\n        margin-right: auto;\n        border-radius: 20px;\n        padding: 40px;\n        width: 533px;\n        height: 468px;\n    }\n    /* @media (min-width: 1280px) {\n        margin-left: 107px;\n    } */\n`;\n\nexport const FormaCastom = styled.form`\n    max-width: 280px;\n    margin-top: 20px;\n    @media (min-width: 768px) {\n        width: 410px;\n    }\n`;\n\nexport const ErrorLabel = styled.div`\n    color: ${({ theme }: any) => theme.colors.error};\n    font-size: 14px;\n    margin-left: 10px;\n`;\n\nexport const InputBox = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: end;\n    margin-top: 40px;\n    width: 100%;\n`;\n\nexport const ShowPasswordBtnStyles = {\n    color: \"#E0E0E0\",\n};\n\nexport const BoxButton = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 42px;\n    @media (min-width: 768px) {\n        width: 300px;\n    }\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h1`\n    display: flex;\n    align-items: center;\n    margin: 0;\n    font-weight: 700;\n    font-family: \"Poppins\";\n    font-size: 24px;\n    line-height: 1.46;\n    @media (min-width: 768px) {\n        font-weight: 700;\n        font-size: 30px;\n        line-height: 1.5;\n    }\n`;\n\n// export const Svg = styled.svg`\n//     height: 30px;\n//     @media (min-width: 768px) {\n//         height: 40px;\n//     }\n// `;\n\nexport const TitleContainer = styled.div`\n    display: flex;\n    align-items: center;\n    height: 40px;\n`;\n","import React from \"react\";\nimport { Title, TitleContainer } from \"./TitleApp.styled\";\n\nconst TitleApp = () => {\n    return (\n        <TitleContainer>\n            <Title>Chess-World</Title>\n        </TitleContainer>\n    );\n};\n\nexport default TitleApp;\n","import { object, string } from \"yup\";\n\nexport const loginSchema = object().shape({\n    email: string().email(\"Invalid email\").required(\"Email must by required\"),\n    password: string()\n        .min(6, \"Password must be longer than 6 letters!\")\n        .max(18, \"Password must be shorts than 18 letters!\")\n        .required(\"Password must by required\"),\n});\n\nexport const registerSchema = object().shape({\n    firstName: string()\n        .min(2, \"Name must be longer than 2 letters!\")\n        .max(30, \"Name must be shorts than 30 letters!\")\n        .required(\"Name must by required\"),\n    password: string()\n        .min(6, \"Password must be longer than 6 letters!\")\n        .max(18, \"Password must be shorts than 18 letters!\")\n        .required(\"Password must by required\"),\n    dublePassword: string()\n        .min(6, \"Password must be longer than 6 letters!\")\n        .max(18, \"Password must be shorts than 18 letters!\")\n        .required(\"Password must by required\"),\n    email: string().email(\"Invalid email\").required(\"Email must by required\"),\n});\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport { toast } from \"react-toastify\";\nimport { TextField, InputLabel, InputAdornment, IconButton } from \"@mui/material\";\nimport { Mail, Lock, Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { newToken } from \"redux/sliceToken\";\nimport { isUserName } from \"redux/sliceUserName\";\nimport { useLoginUserMutation } from \"redux/authAPI\";\nimport { loginSchema } from \"helpers/validationForm\";\nimport TitleApp from \"components/titleApp/TitleApp\";\nimport { GeneralButton } from \"components/generalButton/GeneralButton.styled\";\nimport { ModalForma, BoxButton, InputBox, FormaCastom, ErrorLabel, ShowPasswordBtnStyles } from \"./LoginForm.styled\";\n\nconst LoginForm = () => {\n    const [showPassword, setShowPassword] = useState(false);\n    const [disabled, setDisabled] = useState(false);\n    const [loginUser] = useLoginUserMutation();\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\n\n    const formik = useFormik({\n        initialValues: {\n            password: \"\",\n            email: \"\",\n        },\n        validationSchema: loginSchema,\n        onSubmit: async (values) => {\n            setDisabled(true);\n            try {\n                const respons: any = await loginUser(values);\n\n                if (respons.error) {\n                    toast.error(\"Email or password is wrong\");\n                    setDisabled(false);\n                    return;\n                }\n                if (respons.data.user.name) {\n                    dispatch(newToken(respons.data.user.token));\n                    dispatch(isUserName(respons.data.user.name));\n                    toast.success(`Welcome ${respons.data.user.name}!`);\n                }\n            } catch (error) {\n                console.log(error);\n            }\n            setDisabled(false);\n        },\n    });\n\n    return (\n        <ModalForma>\n            <TitleApp />\n            <FormaCastom onSubmit={formik.handleSubmit}>\n                <InputBox>\n                    <InputLabel htmlFor=\"email\">\n                        {formik.touched.email && formik.errors.email ? (\n                            <ErrorLabel>{formik.errors.email}</ErrorLabel>\n                        ) : null}\n                    </InputLabel>\n                    <TextField\n                        fullWidth\n                        variant={\"standard\"}\n                        required\n                        id=\"email\"\n                        name=\"email\"\n                        type=\"email\"\n                        onChange={formik.handleChange}\n                        value={formik.values.email}\n                        placeholder={\"Email Address\"}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <Mail sx={{ color: \"#E0E0E0\", ml: \"7px\" }} />\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                </InputBox>\n                <InputBox>\n                    <InputLabel htmlFor=\"password\">\n                        {formik.touched.password && formik.errors.password ? (\n                            <ErrorLabel>{formik.errors.password}</ErrorLabel>\n                        ) : null}\n                    </InputLabel>\n                    <TextField\n                        fullWidth\n                        variant={\"standard\"}\n                        required\n                        id=\"password\"\n                        name=\"password\"\n                        type={showPassword ? \"text\" : \"password\"}\n                        onChange={formik.handleChange}\n                        value={formik.values.password}\n                        placeholder={\"Password\"}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <Lock sx={{ color: \"#E0E0E0\", ml: \"7px\" }} />\n                                </InputAdornment>\n                            ),\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        aria-label=\"toggle password visibility\"\n                                        onClick={handleClickShowPassword}\n                                    >\n                                        {showPassword ? <Visibility /> : <VisibilityOff sx={ShowPasswordBtnStyles} />}\n                                    </IconButton>\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                </InputBox>\n                <BoxButton>\n                    <GeneralButton variant={\"contained\"} bts={\"submit\"} disabled={disabled} type=\"submit\">\n                        Log in\n                    </GeneralButton>\n                    <GeneralButton\n                        bts={\"link\"}\n                        variant={\"outlined\"}\n                        onClick={() => navigate(\"/register\", { replace: true })}\n                    >\n                        Register\n                    </GeneralButton>\n                </BoxButton>\n            </FormaCastom>\n        </ModalForma>\n    );\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport LoginForm from \"components/loginForm/LoginForm\";\nimport BackgroundPage from \"components/backgroundPage/BackgroundPage\";\n\nconst LoginPage = () => {\n    return (\n        <BackgroundPage>\n            <LoginForm />\n        </BackgroundPage>\n    );\n};\n\nexport default LoginPage;\n"],"names":["BackgroundBox","styled","chess","BlurMainPage","children","GeneralButton","Button","theme","bts","colors","accent","white","green","hoverWhite","hoverGreen","ModalForma","FormaCastom","ErrorLabel","error","InputBox","ShowPasswordBtnStyles","color","BoxButton","Title","TitleContainer","loginSchema","object","shape","email","string","required","password","min","max","registerSchema","firstName","dublePassword","useState","showPassword","setShowPassword","disabled","setDisabled","useLoginUserMutation","loginUser","navigate","useNavigate","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","respons","toast","data","user","name","newToken","token","isUserName","console","log","TitleApp","handleSubmit","InputLabel","htmlFor","touched","errors","TextField","fullWidth","variant","id","type","onChange","handleChange","value","placeholder","InputProps","startAdornment","InputAdornment","position","Mail","sx","ml","Lock","endAdornment","IconButton","onClick","Visibility","VisibilityOff","replace","BackgroundPage"],"sourceRoot":""}