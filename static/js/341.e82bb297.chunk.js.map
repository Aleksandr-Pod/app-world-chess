{"version":3,"file":"static/js/341.e82bb297.chunk.js","mappings":"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","sources":["views/dashboardPage/DashboardPage.style.tsx","components/appBar/AppBar.styled.tsx","components/modalLogOut/ModalLogOut.styled.tsx","components/modalLogOut/modalLogOut.tsx","components/userMenu/UserMenu.styled.jsx","components/userMenu/UserMenu.tsx","components/appBar/AppBarMobi.tsx","components/userMenu/UserMenuPC.tsx","components/appBar/AppBarPC.tsx","views/dashboardPage/DashboardPage.tsx","../node_modules/@mui/icons-material/Logout.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const BackgroundProfile = styled.div`\n    background-color: #a8b2c9;\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n    width: 100vw;\n    @media (min-width: 768px) {\n        flex-direction: row;\n        max-height: 100vh;\n    }\n`;\n\n// export const BlurMainPage = styled.div``;\n","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const BackgroundAppBarMobi = styled.div`\n    background-color: #7a5739;\n    justify-content: space-between;\n    align-items: center;\n    display: flex;\n    flex-direction: row;\n    width: 100vw;\n    height: 60px;\n    padding: 15px;\n`;\n\nexport const BackgroundAppBarPC = styled.div`\n    background-color: #b6c0d6;\n    // justify-content: space-between;\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    height: 100vh;\n    padding: 15px;\n`;\nexport const Link = styled(NavLink)`\n    display: inline-block;\n    text-decoration: none;\n    color: #d1d1d1;\n    font-weight: 700;\n    font-size: 20px;\n    transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover {\n        transform: scale(1.1);\n    }\n    @media (min-width: 768px) {\n        color: #1a1a1a;\n    }\n`;\n","import styled from \"@emotion/styled\";\n\nexport const LogOutContainer = styled.div`\n    width: 300px;\n    padding: 20px;\n    border-radius: 20px;\n    background-color: #fff;\n    @media (min-width: 768px) {\n        width: 540px;\n        height: 308px;\n        padding: 40px;\n        box-shadow: none;\n    }\n`;\n\nexport const ModalTitle = styled.h3`\n    text-align: center;\n    font-family: \"Poppins\";\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 1.8;\n    color: #000000;\n    @media (min-width: 768px) {\n        font-size: 20px;\n        line-height: 2.25;\n    }\n`;\n\nexport const TitleAccent = styled.p`\n    margin-top: 10px;\n    font-weight: 700;\n    font-size: 22px;\n    line-height: 1.38;\n    @media (min-width: 768px) {\n        font-size: 26px;\n        line-height: 1.38;\n    }\n`;\n\nexport const ButtonWrapper = styled.div`\n    display: block;\n    @media (min-width: 768px) {\n        display: flex;\n        justify-content: space-evenly;\n        margin-left: auto;\n        margin-right: auto;\n        margin-top: 20px;\n    }\n`;\n\nexport const Button = styled.div`\n    width: 250px;\n    @media (min-width: 768px) {\n        width: 200px;\n    }\n`;\n","import { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { newToken } from \"redux/sliceToken\";\nimport { isUserName } from \"redux/sliceUserName\";\nimport { toast } from \"react-toastify\";\nimport { ButtonWrapper, ModalTitle, LogOutContainer, TitleAccent, Button } from \"./ModalLogOut.styled\";\nimport { GeneralButton } from \"components/generalButton/GeneralButton.styled\";\n\nconst ModalLogOut = ({ onModalClose }: any) => {\n    const dispatch = useDispatch();\n    const userName = useSelector((state: any) => state.userName);\n\n    const logOut = () => {\n        toast.info(`${userName} is successful log out`);\n        dispatch(newToken(\"\"));\n        dispatch(isUserName(\"\"));\n    };\n\n    return (\n        <>\n            <LogOutContainer>\n                <ModalTitle>\n                    <TitleAccent>Log Out</TitleAccent>\n                    Are you sure you want to log out?\n                </ModalTitle>\n                <ButtonWrapper>\n                    <Button>\n                        <GeneralButton fullWidth variant={\"contained\"} bts={\"submit\"} onClick={logOut} type=\"submit\">\n                            Yes\n                        </GeneralButton>\n                    </Button>\n                    <Button>\n                        <GeneralButton fullWidth variant={\"outlined\"} bts={\"link\"} onClick={onModalClose} type=\"button\">\n                            No\n                        </GeneralButton>\n                    </Button>\n                </ButtonWrapper>\n            </LogOutContainer>\n        </>\n    );\n};\n\nexport default ModalLogOut;\n","import styled from \"@emotion/styled\";\n\nexport const Greeeting = styled.span`\n    display: block;\n    font-family: \"Circe\";\n    font-style: normal;\n    font-weight: 400;\n    font-size: 18px;\n    line-height: 27px;\n    color: #bdbdbd;\n    margin-right: 12px;\n    cursor: pointer;\n    &:hover {\n        transform: scale(1.1);\n    }\n    @media (min-width: 768px) {\n        &:after {\n            content: \"|\";\n            width: 1px;\n            height: 30px;\n            margin-left: 12px;\n        }\n    }\n`;\n\nexport const GreeetingPC = styled.span`\n    display: block;\n    font-family: \"Roboto\";\n    font-style: normal;\n    font-weight: 500;\n    font-size: 22px;\n    color: #002a69;\n    margin-right: 12px;\n    margin-top: 30px;\n    @media (min-width: 768px) {\n    }\n`;\n\nexport const LogOutBtn = styled.div`\n    color: #bdbdbd;\n    min-width: 0px;\n    padding: 0px;\n    padding-top: 18px;\n    padding-bottom: 18px;\n    display: flex;\n    text-align: center;\n    justify-content: center;\n    cursor: pointer;\n\n    transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover {\n        transform: scale(1.1);\n    }\n\n    @media (min-width: 768px) {\n        padding-top: 28px;\n        padding-bottom: 28px;\n        color: #464646;\n        &:hover {\n            color: #531a1a;\n        }\n    }\n`;\n\nexport const TextBtn = styled.span`\n    display: none;\n    @media (min-width: 768px) {\n        display: block;\n        font-family: \"Circe\";\n        font-style: normal;\n        font-weight: 400;\n        font-size: 18px;\n        line-height: 27px;\n        margin-left: 8px;\n    }\n`;\n\nexport const Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n`;\n","import { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport Modal from \"components/modal/Modal\";\nimport ModalLogOut from \"components/modalLogOut/modalLogOut\";\nimport { Greeeting, LogOutBtn, Wrapper, TextBtn } from \"./UserMenu.styled\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst UserMenu = () => {\n    const [modal, setModal] = useState(false);\n    const navigate = useNavigate();\n\n    const userName = useSelector((state: any) => state.userName);\n\n    return (\n        <Wrapper>\n            <Greeeting\n                onClick={() => {\n                    navigate(\"/statistic\");\n                }}\n            >\n                {userName}\n            </Greeeting>\n            <LogOutBtn\n                onClick={() => {\n                    setModal(true);\n                }}\n            >\n                <LogoutIcon />\n                <TextBtn> Exit </TextBtn>\n            </LogOutBtn>\n            {modal ? (\n                <Modal\n                    onModalClose={() => {\n                        setModal(false);\n                    }}\n                >\n                    <ModalLogOut\n                        onModalClose={() => {\n                            setModal(false);\n                        }}\n                    />\n                </Modal>\n            ) : null}\n        </Wrapper>\n    );\n};\n\nexport default UserMenu;\n","import React from \"react\";\nimport { BackgroundAppBarMobi, Link } from \"./AppBar.styled\";\nimport UserMenu from \"../userMenu/UserMenu\";\n\nconst AppBar = () => {\n    return (\n        <BackgroundAppBarMobi>\n            <Link to=\"/home\">Chess-World</Link>\n            <UserMenu />\n        </BackgroundAppBarMobi>\n    );\n};\n\nexport default AppBar;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Modal from \"components/modal/Modal\";\nimport ModalLogOut from \"components/modalLogOut/modalLogOut\";\nimport { GreeetingPC, LogOutBtn, TextBtn } from \"./UserMenu.styled\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport { NavLink } from \"react-router-dom\";\n\nconst UserMenuPC = () => {\n    const [modal, setModal] = useState(false);\n    const userName = useSelector((state: any) => state.userName);\n\n    return (\n        <div>\n            <GreeetingPC>Welcome {userName}</GreeetingPC>\n            <NavLink to={\"/statistic\"}>My statistic</NavLink>\n            <LogOutBtn\n                onClick={() => {\n                    setModal(true);\n                }}\n            >\n                <LogoutIcon />\n                <TextBtn> Exit </TextBtn>\n            </LogOutBtn>\n            {modal ? (\n                <Modal\n                    onModalClose={() => {\n                        setModal(false);\n                    }}\n                >\n                    <ModalLogOut\n                        onModalClose={() => {\n                            setModal(false);\n                        }}\n                    />\n                </Modal>\n            ) : null}\n        </div>\n    );\n};\n\nexport default UserMenuPC;\n","import React from \"react\";\nimport { BackgroundAppBarPC, Link } from \"./AppBar.styled\";\nimport UserMenuPC from \"components/userMenu/UserMenuPC\";\n\nconst AppBarPC = () => {\n    return (\n        <BackgroundAppBarPC>\n            <Link to=\"/home\">Chess-World</Link>\n            <UserMenuPC />\n        </BackgroundAppBarPC>\n    );\n};\n\nexport default AppBarPC;\n","import { useEffect } from \"react\";\nimport { useNavigate, Outlet } from \"react-router-dom\";\nimport { BackgroundProfile } from \"./DashboardPage.style\";\nimport AppBarMobi from \"components/appBar/AppBarMobi\";\nimport Media from \"react-media\";\nimport AppBarPC from \"components/appBar/AppBarPC\";\nimport PropTypes from \"prop-types\";\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\ntype PropTypes = {\n    curentG: any;\n};\n\nconst DashboardPage: React.FC<PropTypes> = ({ curentG }) => {\n    const navigate = useNavigate();\n    useEffect(() => {\n        if (!curentG) {\n            navigate(\"/home\");\n        } else {\n            navigate(\"/game\");\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <BackgroundProfile>\n            <Media query=\"(max-width: 767px)\" render={() => <AppBarMobi />} />\n            <Media query=\"(min-width: 768px)\" render={() => <AppBarPC />} />\n            <Outlet />\n        </BackgroundProfile>\n    );\n};\n\nexport default DashboardPage;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m17 7-1.41 1.41L18.17 11H8v2h10.17l-2.58 2.58L17 17l5-5zM4 5h8V3H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h8v-2H4V5z\"\n}), 'Logout');\n\nexports.default = _default;"],"names":["BackgroundProfile","styled","BackgroundAppBarMobi","BackgroundAppBarPC","Link","NavLink","LogOutContainer","ModalTitle","TitleAccent","ButtonWrapper","Button","onModalClose","dispatch","useDispatch","userName","useSelector","state","fullWidth","variant","bts","onClick","toast","newToken","isUserName","type","Greeeting","GreeetingPC","LogOutBtn","TextBtn","Wrapper","useState","modal","setModal","navigate","useNavigate","Logout","Modal","to","curentG","useEffect","query","render","AppBarMobi","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}